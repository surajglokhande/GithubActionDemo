name: iOS test workflow

on:
  push:
    branches: [ "main" ]
  # workflow_dispatch:

jobs:
  build_and_test:
    name: Build and Test
    runs-on: macos-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # - name: Set up Ruby and Bundler
      #   uses: ruby/setup-ruby@v1
      #   with:
      #     ruby-version: '3.3.4' # Specify the Ruby version here
      #     bundler-cache: true

      # - name: Cancel Previous Runs
      #   uses: styfle/cancel-workflow-action@0.9.1
      #   with:
      #     access_token: ${{ github.token }}

      - name: List available simulators
        run: xcrun simctl list devices

      - name: Build and Test #Run Tests on iPhone 14 Simulator (iOS 16.0)
        run: |
          xcodebuild test \
            -project GithubActionDemo.xcodeproj
            -scheme 'GithubActionDemo' \
            -destination 'platform=iOS Simulator,name=iPhone 16,OS=18.4'

      # - uses: maxim-lobanov/setup-xcode@v1
      #   with:
      #     xcode-version: latest-stable

      # # Add after 'List available simulators'
      # - name: Boot iPhone 16 Pro Simulator (iOS 18.2)
      #   run: |
      #     SIMULATOR_NAME="iPhone 16 Pro"
      #     OS_VERSION="18.2"
      #     DEVICE_ID=$(xcrun simctl list devices available | grep "$SIMULATOR_NAME ($OS_VERSION" | head -n 1 | awk -F '[()]' '{print $2}')
      #     if [ -z "$DEVICE_ID" ]; then
      #       echo "Simulator not found!"; exit 1
      #     fi
      #     xcrun simctl boot "$DEVICE_ID" || true
      #     xcrun simctl list | grep Booted

      # - name: Install Bundler
      #   run: gem install bundler

      # - name: Install gems
      #   run: bundle install

      # - name: Swift Packages Cache
      #   uses: actions/cache@v4
      #   id: cache
      #   with:
      #     path: |
      #       Build/SourcePackages
      #       Build/Build/Products
      #     key: ${{ runner.os }}-deps-v1-${{ hashFiles('BILDsolid.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved') }}
      #     restore-keys: ${{ runner.os }}-deps-v1-

      # - name: Run Tests (No Cache)
      #   if: steps.setup.outputs.cache-hit != 'true'
      #   env:
      #     FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: 20 # increase base timeout in seconds
      #     FASTLANE_XCODEBUILD_SETTINGS_RETRIES: 8 # increase number of retries
      #   run: bundle exec fastlane unit_test
      
      # - name: Run Tests (Cache)
      #   if: steps.setup.outputs.cache-hit == 'true'
      #   env:
      #     FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: 20 # increase base timeout in seconds
      #     FASTLANE_XCODEBUILD_SETTINGS_RETRIES: 8 # increase number of retries
      #   run: bundle exec fastlane unit_test skip_package_dependencies_resolution:true
